[
  {
    "classname": "NVMeSingleNodeSingleDiskQuickDeath",
    "resourcetype": "DiskNVMe",
    "faultinstructions": [
      "1.	Inject the fault on one NVMe disk using coretestshimutil.exe",
      "a.	The command below will simulate: Quick Death - Dead disk completely goes away",
      "b.	Coretestutil.exe /addtestcase PullDriveTest /TestUniqueId <Disk unique ID> /iterations 1000",
      "c.	Coretestutil.exe /enabletestcase PullDriveTest /TestUniqueId <Disk unique ID> /iterations 1000",
      "2.	Verify the disk being reported as ‘unhealthy’ and VD reported as ‘degraded’",
      "3.	Verify workloads running without errors. Confirm no VMs got rebooted/turned off",
      "4.	Check the admin portal  and confirm that the disk failure is reported as alert/warning ",
      "5.	Confirm the Vdisks is in 'degraded' state.",
      "6.	Light up the failed disk to identify which disk to remove and replace - Enable-PhysicalDiskIndication - UniqueID <Disk unique ID>",
      "7.	Remove the faulty disk (disk we injected fault onto), physically.",
      "8. Add a clean new disk in the same slot as the faulty disk.",
      "9. Clear coretestshim failures by running - Coretestutil.exe /removetestcase PullDriveTest /TestUniqueId <Id>",
      "10. Repair-spaces - get-virtualdisk | repair-virtualdisk ",
      "11. Confirm storage jobs are running - Get-StorageJob",
      "12.  If the above steps worked as expected, click on 'Pass' button below.",
      "13.  If any of the above steps have failed, click on the 'Fail' button below and enter all the details regarding the failure."
    ]
  },
  {
    "classname": "NVMeSingleNodeSingleDiskSlowDeath",
    "resourcetype": "DiskNVMe",
    "faultinstructions": [
      "1.	Inject the fault on one NVMe disk using coretestshimutil.exe ",
      "a.	This command below will simulate: Slow Death - Dying disk delay IO – 2000ms",
      "b. Coretestutil.exe /addtestcase IoDelayTest /TestUniqueId <Id> /delay 2000 /iterations 100000",
      "c.	Coretestutil.exe /enabletestcase IoDelayTest /TestUniqueId <Id> /delay 2000 /iterations 100000",
      "2.	Verify the disk being reported as ‘unhealthy’ and VD reported as ‘degraded’",
      "3.	Verify workloads running without errors. Confirm no VMs got rebooted/turned off",
      "4.	Check the admin portal  and confirm that the disk failure is reported as alert/warning ",
      "5.	Confirm the Vdisks is in 'degraded' state.",
      "6.	Light up the failed disk to identify which disk to remove and replace - Enable-PhysicalDiskIndication - UniqueID <Disk unique ID>",
      "7.	Remove the faulty disk (disk we injected fault onto), physically.",
      "8. Add a clean new disk in the same slot as the faulty disk.",
      "9. Clear coretestshim failures by running - Coretestutil.exe /removetestcase IoDelayTest /TestUniqueId <Id>",
      "10. Repair-spaces - get-virtualdisk | repair-virtualdisk ",
      "11. Confirm storage jobs are running - Get-StorageJob",
      "12.  If the above steps worked as expected, click on 'Pass' button below.",
      "13.  If any of the above steps have failed, click on the 'Fail' button below and enter all the details regarding the failure."
    ]
  },
  {
    "classname": "NVMeSingleNodeTwoDiskQuickDeath",
    "resourcetype": "DiskNVMe",
    "faultinstructions": [
      "1.	Inject the fault on 2 NVMe disks from the same node using coretestshimutil.exe ",
      "\ta.	This will simulate: Quick Death -  Dead disk times out everything",
      "\tb.	Run the following on 2 NVMe disks selected.",
      "\tc.	Coretestutil.exe /addtestcase AllTimeoutTest /TestUniqueId <Id> /iterations 100000",
      "\td.	Coretestutil.exe /enabletestcase AllTimeoutTest /TestUniqueId <Id> /iterations 100000",
      "2.	Verify the 2 disks are being reported as ‘unhealthy’ and VD reported as ‘degraded’",
      "3.	Verify workloads running without errors. Confirm no VMs got rebooted/turned off",
      "4.	Check the admin portal  and confirm that the 2 disks failure is reported as alert/warning ",
      "5.	Confirm the Vdisks is in 'degraded' state.",
      "6.	Light up the failed disks to identify which disks to remove and replace - Enable-PhysicalDiskIndication - UniqueID <Disk unique ID>",
      "7.	Remove the 2 faulty disks (disks we injected faults onto) , physically.",
      "8. Add 2 clean new disks in the same slots as the faulty disks.",
      "9. Clear coretestshim failures by running the command for each disk- Coretestutil.exe /removetestcase AllTimeoutTest /TestUniqueId <Id>",
      "10. Repair-spaces - get-virtualdisk | repair-virtualdisk ",
      "11. Confirm storage jobs are running - Get-StorageJob",
      "12.  If the above steps worked as expected, click on 'Pass' button below.",
      "13.  If any of the above steps have failed, click on the 'Fail' button below and enter all the details regarding the failure."
    ]
  },
  {
    "classname": "NVMeSingleNodeTwoDiskSlowDeath",
    "resourcetype": "DiskNVMe",
    "faultinstructions": [
      "1.	Inject the fault on 2 NVMe disks from the same node using coretestshimutil.exe ",
      "\ta.	This will simulate: Slow Death - Dying disk bad sector, sector v2",
      "\tb.	Run the following on 2 NVMe disks selected.",
      "\tc.	Coretestutil.exe /addtestcase IoTimeoutTest /TestUniqueId <Id> /iterations 100000 /startsector 2 /sectorcount 1",
      "\td.	Coretestutil.exe /enabletestcase IoTimeoutTest /TestUniqueId <Id> /iterations 100000 /startsector 4 /sectorcount 1",
      "2.	Verify the 2 disks are being reported as ‘unhealthy’ and VD reported as ‘degraded’",
      "3.	Verify workloads running without errors. Confirm no VMs got rebooted/turned off",
      "4.	Check the admin portal  and confirm that the 2 disks failure is reported as alert/warning ",
      "5.	Confirm the Vdisks is in 'degraded' state.",
      "6.	Light up the failed disks to identify which disks to remove and replace - Enable-PhysicalDiskIndication - UniqueID <Disk unique ID>",
      "7.	Remove the 2 faulty disks (disks we injected faults onto) , physically.",
      "8. Add 2 clean new disks in the same slots as the faulty disks.",
      "9. Clear coretestshim failures by running the command for each disk- Coretestutil.exe /removetestcase IoTimeoutTest /TestUniqueId <Id>",
      "10. Repair-spaces - get-virtualdisk | repair-virtualdisk ",
      "11. Confirm storage jobs are running - Get-StorageJob",
      "12.  If the above steps worked as expected, click on 'Pass' button below.",
      "13.  If any of the above steps have failed, click on the 'Fail' button below and enter all the details regarding the failure."
    ]
  },
  {
    "classname": "NVMeSingleNodeAllDiskQuickDeath",
    "resourcetype": "DiskNVMe",
    "faultinstructions": [
      "1.	Inject the fault on ALL NVMe disks from the same node using coretestshimutil.exe ",
      "\ta.	This will simulate: Quick Death -  Dead disk fails IOs",
      "\tb.	Run the following on ALL NVMe disks selected.",
      "\tc.	Coretestutil.exe /addtestcase IoFailureTest /TestUniqueId <Id> /iterations 100000",
      "\td.	Coretestutil.exe /enabletestcase IoFailureTest /TestUniqueId <Id> /iterations 100000",
      "2.	Verify the all NVMe disks are being reported as ‘unhealthy’ and VD reported as ‘degraded’",
      "3.	Verify workloads running without errors. Confirm no VMs got rebooted/turned off",
      "4.	Check the admin portal  and confirm that the disks failure is reported as alert/warning ",
      "5.	Confirm the Vdisks is in 'degraded' state.",
      "6.	Light up the failed disks to identify which disks to remove and replace - Enable-PhysicalDiskIndication - UniqueID <Disk unique ID>",
      "7.	Remove the faulty disks (disks we injected faults onto) , physically.",
      "8. Add clean new disks in the same slots as the faulty disks.",
      "9. Clear coretestshim failures by running the command for each disk- Coretestutil.exe /removetestcase IoFailureTest /TestUniqueId <Id>",
      "10. Repair-spaces - get-virtualdisk | repair-virtualdisk ",
      "11. Confirm storage jobs are running - Get-StorageJob",
      "12.  If the above steps worked as expected, click on 'Pass' button below.",
      "13.  If any of the above steps have failed, click on the 'Fail' button below and enter all the details regarding the failure."
   ]
  },
  {
    "classname": "NVMeSingleNodeAllDiskSlowDeath",
    "resourcetype": "DiskNVMe",
    "faultinstructions": [
      "1.	Inject the fault on ALL NVMe disks from the same node using coretestshimutil.exe ",
      "\ta.	This will simulate: Slow Death - Dying disk delay IO – 2000ms",
      "\tb.	Run the following on ALL NVMe disks selected.",
      "\tc.	Coretestutil.exe /addtestcase IoDelayTest /TestUniqueId <Id> /delay 2000 /iterations 100000",
      "\td.	Coretestutil.exe /enabletestcase IoDelayTest /TestUniqueId <Id> /delay 2000 /iterations 100000",
      "2.	Verify the all NVMe disks are being reported as ‘unhealthy’ and VD reported as ‘degraded’",
      "3.	Verify workloads running without errors. Confirm no VMs got rebooted/turned off",
      "4.	Check the admin portal  and confirm that the disks failure is reported as alert/warning ",
      "5.	Confirm the Vdisks is in 'degraded' state.",
      "6.	Light up the failed disks to identify which disks to remove and replace - Enable-PhysicalDiskIndication - UniqueID <Disk unique ID>",
      "7.	Remove the faulty disks (disks we injected faults onto) , physically.",
      "8. Add clean new disks in the same slots as the faulty disks.",
      "9. Clear coretestshim failures by running the command for each disk- Coretestutil.exe /removetestcase IoDelayTest /TestUniqueId <Id>",
      "10. Repair-spaces - get-virtualdisk | repair-virtualdisk ",
      "11. Confirm storage jobs are running - Get-StorageJob",
      "12.  If the above steps worked as expected, click on 'Pass' button below.",
      "13.  If any of the above steps have failed, click on the 'Fail' button below and enter all the details regarding the failure."
    ]
  },
  {
    "classname": "NVMe2NodeSingleDiskQuickDeath",
    "resourcetype": "DiskNVMe",
    "faultinstructions": [
      "1.	Inject the fault on the disks mentioned below using coretestshimutil.exe ",
      "\ta.	One NVMe disk on node1: Quick Death - Dead disk completely goes away",
      "\t\t1.	Coretestutil.exe /addtestcase PullDriveTest /TestUniqueId <Id> /iterations 1000",
      "\t\t2.	Coretestutil.exe /enabletestcase PullDriveTest /TestUniqueId <Id> /iterations 1000",
      "\tb.	One NVMe disk on node2: Quick Death - Dead disk completely goes away",
      "\t\t1.	Coretestutil.exe /addtestcase PullDriveTest /TestUniqueId <Id> /iterations 1000",
      "\t\t2.	Coretestutil.exe /enabletestcase PullDriveTest /TestUniqueId <Id> /iterations 1000",
      "2.	Verify the 2 disks are being reported as ‘unhealthy’ and VD reported as ‘degraded’",
      "3.	Verify workloads running without errors. Confirm no VMs got rebooted/turned off",
      "4.	Check the admin portal  and confirm that the 2 disks failure is reported as alert/warning ",
      "5.	Confirm the Vdisks is in 'degraded' state.",
      "6.	Light up the failed disks to identify which disks to remove and replace - Enable-PhysicalDiskIndication - UniqueID <Disk unique ID>",
      "7.	Remove the 2 faulty disks (disks we injected faults onto) , physically.",
      "8. Add 2 clean new disks in the same slots as the faulty disks on the specific nodes.",
      "9. Clear coretestshim failures by running the command for each disk- Coretestutil.exe /removetestcase PullDriveTest /TestUniqueId <Id>",
      "10. Repair-spaces - get-virtualdisk | repair-virtualdisk ",
      "11. Confirm storage jobs are running - Get-StorageJob",
      "12.  If the above steps worked as expected, click on 'Pass' button below.",
      "13.  If any of the above steps have failed, click on the 'Fail' button below and enter all the details regarding the failure."
    ]
  },
  {
    "classname": "NVMe2NodeSingleDiskSlowDeath",
    "resourcetype": "DiskNVMe",
    "faultinstructions": [
      "1.	Inject the fault on the disks mentioned below using coretestshimutil.exe ",
      "\ta.	One NVMe disk on node1: Slow Death -  Dying disk bad sector, sector 2",
      "\t\t1.	Coretestutil.exe /addtestcase IoTimeoutTest /TestUniqueId <Id> /iterations 100000 /startsector 2 /sectorcount 1",
      "\t\t2.	Coretestutil.exe /enabletestcase IoTimeoutTest /TestUniqueId <Id> /iterations 100000 /startsector 2 /sectorcount 1",
      "\tb.	One NVMe disk on node2: Slow Death -  Dying disk bad sector, sector 4",
      "\t\t1.	Coretestutil.exe /addtestcase IoTimeoutTest /TestUniqueId <Id> /iterations 100000 /startsector 4 /sectorcount 1",
      "\t\t2.	Coretestutil.exe /enabletestcase IoTimeoutTest /TestUniqueId <Id> /iterations 100000 /startsector 4 /sectorcount 1",
      "2.	Verify the 2 disks are being reported as ‘unhealthy’ and VD reported as ‘degraded’",
      "3.	Verify workloads running without errors. Confirm no VMs got rebooted/turned off",
      "4.	Check the admin portal  and confirm that the 2 disks failure is reported as alert/warning ",
      "5.	Confirm the Vdisks is in 'degraded' state.",
      "6.	Light up the failed disks to identify which disks to remove and replace - Enable-PhysicalDiskIndication - UniqueID <Disk unique ID>",
      "7.	Remove the 2 faulty disks (disks we injected faults onto) , physically.",
      "8. Add 2 clean new disks in the same slots as the faulty disks on the specific nodes.",
      "9. Clear coretestshim failures by running the command for each disk- Coretestutil.exe /removetestcase IoTimeoutTest /TestUniqueId <Id>",
      "10. Repair-spaces - get-virtualdisk | repair-virtualdisk ",
      "11. Confirm storage jobs are running - Get-StorageJob",
      "12.  If the above steps worked as expected, click on 'Pass' button below.",
      "13.  If any of the above steps have failed, click on the 'Fail' button below and enter all the details regarding the failure."
    ]
  },
  {
    "classname": "NVMe2NodeSingleDiskSlowAndQuickDeath",
    "resourcetype": "DiskNVMe",
    "faultinstructions": [
      "1.	Inject the fault on the disks mentioned below using coretestshimutil.exe ",
      "\ta.	One NVMe disk on node1: Quick Death - Dead disk fails IOs",
      "\t\t1.	Coretestutil.exe /addtestcase IoFailureTest /TestUniqueId <Id> /iterations 100000",
      "\t\t2.	Coretestutil.exe /enabletestcase IoFailureTest /TestUniqueId <Id> /iterations 100000",
      "\tb.	One NVMe disk on node2: Slow Death -Dying disk bad sector, sector 2",
      "\t\t1.	Coretestutil.exe /addtestcase IoTimeoutTest /TestUniqueId <Id> /iterations 100000 /startsector 2 /sectorcount 1",
      "\t\t2.	Coretestutil.exe /enabletestcase IoTimeoutTest /TestUniqueId <Id> /iterations 100000 /startsector 2 /sectorcount 1",
      "2.	Verify the 2 disks are being reported as ‘unhealthy’ and VD reported as ‘degraded’",
      "3.	Verify workloads running without errors. Confirm no VMs got rebooted/turned off",
      "4.	Check the admin portal  and confirm that the 2 disks failure is reported as alert/warning ",
      "5.	Confirm the Vdisks is in 'degraded' state.",
      "6.	Light up the failed disks to identify which disks to remove and replace - Enable-PhysicalDiskIndication - UniqueID <Disk unique ID>",
      "7.	Remove the 2 faulty disks (disks we injected faults onto) , physically.",
      "8. Add 2 clean new disks in the same slots as the faulty disks on the specific nodes.",
      "9. Clear coretestshim failures by running the command for each disk",
      "\ta. Clear coretestshim failures by running the command for each disk- Coretestutil.exe /removetestcase IoFailureTest /TestUniqueId <Id>",
      "\tb. Clear coretestshim failures by running the command for each disk- Coretestutil.exe /removetestcase PullDriveTest /TestUniqueId <Id>",
      "10. Repair-spaces - get-virtualdisk | repair-virtualdisk ",
      "11. Confirm storage jobs are running - Get-StorageJob",
      "12.  If the above steps worked as expected, click on 'Pass' button below.",
      "13.  If any of the above steps have failed, click on the 'Fail' button below and enter all the details regarding the failure."
    ]
  },
  {
    "classname": "NVMeSingleNodeSingleDiskAccPull",
    "resourcetype": "DiskNVMe",
    "faultinstructions": [
      "1. Select an NVMe to be accidently pulled out from a node. ",
      "2. Get the Disk unique ID - Get-PhysicalDisk -SerialNumber <disk serial number> | ft UniqueID, Mediatype",
      "3. Copy the Disk unique ID from the screen and paste it in the 'Resource Name' text box above",
      "4. Light up the disk to identify which disk to remove and replace - Enable-PhysicalDiskIndication - UniqueID <Disk unique ID>",
      "5. Remove the NVMe disk (disk identified above) , physically.",
      "6. Verify the disks being reported as ‘unhealthy’ and VD reported as ‘degraded’",
      "7. Verify workloads running without errors. Confirm no VMs got rebooted/turned off",
      "8. Check the admin portal  and confirm that the disk failure is reported as alert/warning ",
      "9. Confirm the Vdisks is in 'degraded' state.",
      "10.  Wait for 5 minutes and re-insert the disk in the same node and same slot.",
      "11.  Repair-spaces - get-virtualdisk | repair-virtualdisk ",
      "12.  Confirm storage jobs are running - Get-StorageJob",
      "13.  If the above steps worked as expected, click on 'Pass' button below.",
      "14.  If any of the above steps have failed, click on the 'Fail' button below and enter all the details regarding the failure."
    ]
  },
  {
    "classname": "NVMeSingleNode2DiskAccPull",
    "resourcetype": "DiskNVMe",
    "faultinstructions": [
      "1. Select 2 NVMe to be accidently pulled out from a node. ",
      "2. Get the Disk unique ID for both disks - Get-PhysicalDisk -SerialNumber <disk serial number> | ft UniqueID, Mediatype",
      "3. Copy the Disk unique ID from the powershell prompt and paste it in the 'Resource Name' text box above. Enter IDs for both disks",
      "4. Light up the disks to identify which disks to remove and replace - Enable-PhysicalDiskIndication - UniqueID <Disk unique ID>",
      "5. Remove the 2 NVMe disks (disks we injected faults onto) , physically.",
      "6. Verify the 2 disks are being reported as ‘unhealthy’ and VD reported as ‘degraded’",
      "7. Verify workloads running without errors. Confirm no VMs got rebooted/turned off",
      "8. Check the admin portal  and confirm that the 2 disks failure is reported as alert/warning ",
      "9. Confirm the Vdisks is in 'degraded' state.",
      "10.  Wait for 5 minutes and re-insert the disks in the same node but switch the slots.",
      "11.  Repair-spaces - get-virtualdisk | repair-virtualdisk ",
      "12.  Confirm storage jobs are running - Get-StorageJob",
      "13.  If the above steps worked as expected, click on 'Pass' button below.",
      "14.  If any of the above steps have failed, click on the 'Fail' button below and enter all the details regarding the failure."
    ]
  }
]